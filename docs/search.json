[
  {
    "objectID": "posts/HateRs.html",
    "href": "posts/HateRs.html",
    "title": "Transforming File Formats for HateRs",
    "section": "",
    "text": "Welcome to the world of R! If you‚Äôre reading this, chances are you‚Äôre a bit hesitant about diving into R. Maybe you‚Äôve heard it‚Äôs complicated or you‚Äôve already had a frustrating experience. Well, you‚Äôre in the right place‚Äîlet‚Äôs make this easy and fun!\nFirst things first, let‚Äôs get familiar with RStudio, the tool we‚Äôll use to work with R. Below, you‚Äôll see a screenshot of RStudio. It might look a little overwhelming at first, but don‚Äôt worry! The important part for us is the script window, which is where you‚Äôll write your R code. To open a new script, just click on File &gt; New File &gt; R Script. You can write your code there and save it by clicking File &gt; Save or pressing Ctrl + S. Easy peasy!\n\n\n\nRStudio Screenshot\n\n\nNow, let‚Äôs get down to business‚Äîtransforming file formats! üï∫"
  },
  {
    "objectID": "posts/HateRs.html#introduction",
    "href": "posts/HateRs.html#introduction",
    "title": "Transforming File Formats for HateRs",
    "section": "",
    "text": "Welcome to the world of R! If you‚Äôre reading this, chances are you‚Äôre a bit hesitant about diving into R. Maybe you‚Äôve heard it‚Äôs complicated or you‚Äôve already had a frustrating experience. Well, you‚Äôre in the right place‚Äîlet‚Äôs make this easy and fun!\nFirst things first, let‚Äôs get familiar with RStudio, the tool we‚Äôll use to work with R. Below, you‚Äôll see a screenshot of RStudio. It might look a little overwhelming at first, but don‚Äôt worry! The important part for us is the script window, which is where you‚Äôll write your R code. To open a new script, just click on File &gt; New File &gt; R Script. You can write your code there and save it by clicking File &gt; Save or pressing Ctrl + S. Easy peasy!\n\n\n\nRStudio Screenshot\n\n\nNow, let‚Äôs get down to business‚Äîtransforming file formats! üï∫"
  },
  {
    "objectID": "posts/HateRs.html#why-transform-file-formats",
    "href": "posts/HateRs.html#why-transform-file-formats",
    "title": "Transforming File Formats for HateRs",
    "section": "Why Transform File Formats?",
    "text": "Why Transform File Formats?\nSometimes, data isn‚Äôt in the format you need it to be. Maybe it‚Äôs in a weird format your boss likes or something a client sent over that makes your eyes cross. Fortunately, R has a handy package called haven that makes reading and saving different file formats a breeze. Whether it‚Äôs a Stata .dta file, SPSS .sav file, or SAS .sas7bdat file, it‚Äôs got you covered!"
  },
  {
    "objectID": "posts/HateRs.html#getting-started-with-the-haven-package",
    "href": "posts/HateRs.html#getting-started-with-the-haven-package",
    "title": "Transforming File Formats for HateRs",
    "section": "Getting Started with the haven Package",
    "text": "Getting Started with the haven Package\nFirst, we need to install the haven package. Packages in R are like apps on your phone‚Äîsmall tools that do specific tasks. To install the package, you just need to type this line of code in your script and run it:\ninstall.packages(\"haven\")\nOnce the package is installed, we need to load it into our R session using the library() function. Think of this like opening the app after you‚Äôve downloaded it:\nlibrary(haven)\nThe next time you open RStudio, haven will still be installed, so you only need to use the library command to load it."
  },
  {
    "objectID": "posts/HateRs.html#reading-data-files",
    "href": "posts/HateRs.html#reading-data-files",
    "title": "Transforming File Formats for HateRs",
    "section": "Reading Data Files",
    "text": "Reading Data Files\nLet‚Äôs say you have some data in a Stata file called data.stata and you want to get it into R. Here‚Äôs how you can do it:\n# Reading a Stata file\nmy_data &lt;- read_stata(\"path/to/your/data.dta\")\nYou may notice that have also include a read_dta command. however, there‚Äôs no functional difference between the two. In haven, read_dta() is simply an alias for read_stata(). Both commands do exactly the same thing. The two names exist mainly for historical and usability reasons.\nThat‚Äôs it! Let‚Äôs try another one:"
  },
  {
    "objectID": "posts/HateRs.html#reading-spss-files",
    "href": "posts/HateRs.html#reading-spss-files",
    "title": "Transforming File Formats for HateRs",
    "section": "Reading SPSS Files",
    "text": "Reading SPSS Files\nGot an SPSS file? No problem:\n# Reading an SPSS file\nmy_data &lt;- read_sav(\"path/to/your/data.sav\")"
  },
  {
    "objectID": "posts/HateRs.html#reading-sas-files",
    "href": "posts/HateRs.html#reading-sas-files",
    "title": "Transforming File Formats for HateRs",
    "section": "Reading SAS Files",
    "text": "Reading SAS Files\nAnd for you SAS users out there:\n# Reading a SAS file\nmy_data &lt;- read_sas(\"path/to/your/data.sas7bdat\")\nIt‚Äôs worth noting that before haven version 1.1.0, released in March 2017, it was unable to open SAS files if they were saved using SAS‚Äôs built‚Äêin compression. That shouldn‚Äôt be a problem any more, but if you see an error message like this\n# Error in sas7bdat::read.sas7bdat(sas_file) : \n  # file contains compressed data\nyou will know that you need to decompress the SAS file in SAS before you can open it in R.\ndata out.my_sas_data;\n set out.my_sas_data;\n  compress = off;\nrun;\nThen everything should work as expected."
  },
  {
    "objectID": "posts/HateRs.html#saving-data-in-another-format",
    "href": "posts/HateRs.html#saving-data-in-another-format",
    "title": "Transforming File Formats for HateRs",
    "section": "Saving Data in Another Format",
    "text": "Saving Data in Another Format\nSo, you‚Äôve got your data in R, and now you want to save it in another format. Maybe your boss loves Excel, or you want to send something nice and clean back to the client. Here‚Äôs how you can save your data in different formats:"
  },
  {
    "objectID": "posts/HateRs.html#saving-as-a-stata-file",
    "href": "posts/HateRs.html#saving-as-a-stata-file",
    "title": "Transforming File Formats for HateRs",
    "section": "Saving as a Stata File",
    "text": "Saving as a Stata File\nWant to save your data as a Stata file? Easy:\n# Saving as a Stata file\nwrite_dta(my_data, \"path/to/save/your_data.dta\")"
  },
  {
    "objectID": "posts/HateRs.html#saving-as-an-spss-file",
    "href": "posts/HateRs.html#saving-as-an-spss-file",
    "title": "Transforming File Formats for HateRs",
    "section": "Saving as an SPSS File",
    "text": "Saving as an SPSS File\nNeed an SPSS file? Here you go:\n# Saving as an SPSS file\nwrite_sav(my_data, \"path/to/save/your_data.sav\")"
  },
  {
    "objectID": "posts/HateRs.html#saving-as-a-sas-file",
    "href": "posts/HateRs.html#saving-as-a-sas-file",
    "title": "Transforming File Formats for HateRs",
    "section": "Saving as a SAS File",
    "text": "Saving as a SAS File\nAnd if you need to go back to SAS:\n# Saving as a SAS file\nwrite_sas(my_data, \"path/to/save/your_data.sas7bdat\")"
  },
  {
    "objectID": "posts/HateRs.html#wrapping-up",
    "href": "posts/HateRs.html#wrapping-up",
    "title": "Transforming File Formats for HateRs",
    "section": "Wrapping Up",
    "text": "Wrapping Up\nAnd there you have it‚Äîreading and saving data in different formats using the haven package in R! It might seem like a lot at first, but with just a few lines of code, you can easily transform your data files into the format you need. Remember, every expert was once a beginner, and you‚Äôre already on your way. So keep going, and don‚Äôt hesitate to try new things in R. You‚Äôve got this!\nHappy coding! üéâ"
  },
  {
    "objectID": "CV.html",
    "href": "CV.html",
    "title": "Michael Willox",
    "section": "",
    "text": "Senior Research Economist | Statistics Canada, Ottawa, Canada\nMichael.Willox@statcan.gc.ca\n\nDoctoral Researcher | Brunel University, London, UK\nMichael.Willox@brunel.ac.uk\n\nLinkedIn | GitHub | Google Scholar | ORCID | RePEc"
  },
  {
    "objectID": "CV.html#work-experience",
    "href": "CV.html#work-experience",
    "title": "Michael Willox",
    "section": "Work Experience",
    "text": "Work Experience\n\nSenior Research Economist\nStatistics Canada, Ottawa, Canada\nDec 2013 ‚Äì Present\n\nConducts research on economic and environmental issues to support Statistics Canada‚Äôs research agenda.\nPerforms impact evaluations for federal government departments.\nManages projects with multidisciplinary teams on a variety of projects such as building and maintaining a world-class economic and environmental database.\nBuilt and maintains an online productivity benchmarking tool for Canadian businesses.\nDeveloped data series for the Canadian System of National Accounts to support policy development.\n\n\n\nSenior Economist\nFinance Canada, Ottawa, Canada\nNov 2006 ‚Äì Dec 2013\n\nContributed to the development and coordination of the Federal Government of Canada‚Äôs annual Budgets and Economic Updates.\nConducted economic analysis on productivity, competition, and labor markets.\nProvided analysis and briefings on U.S. monetary policy and global economic events.\n\n\n\nEconomist\nEnvironment and Climate Change Canada, Ottawa, Canada\nJul 2005 ‚Äì Nov 2006\n\nConducted policy research and developed Greenhouse Gas (GHG) and clean air emissions forecasts using the Energy 2020 model.\nCoordinated briefing materials for senior management.\n\n\n\nEconomist\nNatural Resources Canada, Ottawa, Canada\nDec 2003 ‚Äì Jun 2005\n\nConducted policy research on economic and financial issues facing Canada‚Äôs energy sector.\nDeveloped responses to public inquiries on behalf of the Minister.\n\n\n\nProgram Evaluation Analyst\nHealth Canada Departmental Program Evaluation Division, Ottawa, Canada\nJun 2002 ‚Äì Nov 2003\n\nLead analyst for the evaluation of the Primary Health Care Transition Fund and Alcohol and Drug Rehabilitation Program.\nPrepared Treasury Board Submissions."
  },
  {
    "objectID": "CV.html#education",
    "href": "CV.html#education",
    "title": "Michael Willox",
    "section": "Education",
    "text": "Education\n\nPhD candidate in Economics and Finance, Brunel University London, London, UK (Oct 2023 ‚Äì Present)\nCanadian Securities Course, Canadian Securities Institute, Ottawa, Canada (Oct 2004)\nMA in Economics, McGill University, Montr√©al, Canada (Apr 2003)\nBA (Hons) in Economics, University of Regina, Regina, Canada (Oct 1996)\nBA in Political Science, University of Regina, Regina, Canada (Apr 1994)"
  },
  {
    "objectID": "CV.html#computer-skills",
    "href": "CV.html#computer-skills",
    "title": "Michael Willox",
    "section": "Computer Skills",
    "text": "Computer Skills\n\nOffice Productivity: Word, Excel, Outlook, PowerPoint\nStatistical Software: R, R Studio, Shiny, SAS, Stata, Git, GitHub, GitLab, Python"
  },
  {
    "objectID": "CV.html#publications",
    "href": "CV.html#publications",
    "title": "Michael Willox",
    "section": "Publications",
    "text": "Publications\nGu, W., & Willox, M. (2023). The Post-2001 Productivity Growth Divergence between Canada and the United States.¬†International Productivity Monitor,¬†45, 27-60. Link.\nKumbhakar, S. C., Badunenko, O., & Willox, M. (2022). Do carbon taxes affect economic and environmental efficiency? The case of British Columbia‚Äôs manufacturing plants.¬†Energy Economics,¬†115, 106359. Link.\nLiu, Huju, Lu, Y., & Willox, M. (2021). ‚ÄúUse of the Canada Emergency Wage Subsidy program by employer businesses in 2020.‚Äù Ottawa: Statistics Canada, Economic and Social Reports, Catalogue Number 36-28-0001. Link.\nLafrance-Cooke , A. , Macdonald, R., & Willox, M. (2020). ‚ÄúMonthly Business Openings and Closures: Experimental Series for Canada, the Provinces and Territories, and Census Metropolitan Areas.‚Äù Economic Insights, No.¬†116. Statistics Canada Cat. No.¬†11-626-X. Link.\nGu, W., Hussain, J., & Willox, M. (2019).¬†Environmentally adjusted multifactor productivity growth for the Canadian manufacturing sector. Statistics Canada. Link.\nGu, W., & Willox, M. (2018). Productivity Growth in Canada and the United States: Recent Industry Trends and Potential Explanations.¬†International Productivity Monitor,¬†35, 73-94. Link.\nBaldwin, J. R., & Willox, M. (2016). The industry origins of Canada‚Äôs weaker labour productivity performance and the role of structural adjustment in the post-2000 period.¬†International Productivity Monitor, (31), 19-37. Link."
  },
  {
    "objectID": "CV.html#awards",
    "href": "CV.html#awards",
    "title": "Michael Willox",
    "section": "Awards",
    "text": "Awards\n\nStatistics Canada Award of Excellence: Excellence in Project Delivery, 2017\nStatistics Canada Award of Excellence: Outstanding Contribution Award, 2020"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Welcome to My Blog\nHere you‚Äôll find my latest posts, each with a brief description and a preview image. Click on any post to read the full article.\nHow to transform file formats using R for HateRs"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Michael Willox",
    "section": "",
    "text": "Senior Research Economist | Statistics Canada; Ottawa, Canada\nDoctoral Researcher | Brunel University of London; Uxbridge, London, UK\n\nThis is the homepage for my personal website. Here you can find information about my research, projects, and more (soon)."
  },
  {
    "objectID": "posts/HateRs.html#some-of-havens-most-useful-options",
    "href": "posts/HateRs.html#some-of-havens-most-useful-options",
    "title": "Transforming File Formats for HateRs",
    "section": "Some of haven‚Äôs Most Useful Options",
    "text": "Some of haven‚Äôs Most Useful Options\nWhen working with data files‚Äîespecially large ones‚Äîyou often don‚Äôt need every single column or row loaded into your R session. This is where haven‚Äôs options like col_select, skip, and n_max become incredibly useful. They give you finer control over the data import process, making your workflow more efficient and your code more purposeful. Let‚Äôs break down what each option does and see a few examples in action.\ncol_select The col_select option lets you specify exactly which columns to import from your dataset. This is particularly beneficial when:\nskip Sometimes data files include rows at the beginning that aren‚Äôt part of the actual dataset‚Äîmaybe they contain metadata, comments, or headers that aren‚Äôt structured as data. The skip option allows you to tell haven to ignore a specified number of rows at the start of the file.\nn_max When exploring a new dataset or working with very large files, you might only want to import a subset of the data to get a feel for its structure and content. The n_max option sets an upper limit on the number of rows to read.\nBelow is a simple example in R that demonstrates how to use these options when reading a SAS file with haven:\nlibrary(haven)\n\n# Suppose we have a SAS dataset 'data.sas7bdat' and we want to:\n# - Read only the columns: age, income, and gender.\n# - Skip the first 2 rows (perhaps they contain metadata or non-data info).\n# - Limit our import to the first 100 rows for a quick preview.\n\ndata_preview &lt;- read_sas(\"data.sas7bdat\",\n                         col_select = c(age, income, gender),\n                         skip = 2,\n                         n_max = 100)\n\n# Display the first few rows of the resulting data frame\nhead(data_preview)\ncol_select = c(age, income, gender) tells haven to include only those three variables. skip = 2 instructs it to bypass the first two rows. n_max = 100 ensures that only 100 rows are read, which is perfect for an initial data exploration.\nBy using these options:\n\nYou Gain Speed: Loading only necessary parts of your data speeds up your workflow, particularly useful when dealing with large files.\nYou Save Resources: Less memory is consumed, which is ideal when working in environments with limited resources.\nYou Enhance Clarity: Your code explicitly shows which parts of the dataset you need, making it easier for others (and your future self) to understand your workflow."
  }
]